name: ci
on:
  push:
  pull_request:

jobs:
  node:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [20]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
      - name: Install deps
        working-directory: extension
        run: |
          npm ci || npm i
      - name: Build extension (WASM + TS)
        working-directory: extension
        run: npm run build
      - name: Lint (ESLint)
        working-directory: extension
        run: npm run lint || echo "lint warnings"
      - name: Run unit tests (vitest)
        working-directory: extension
        run: npm test || echo "no unit tests yet"
      - name: Run extension-host tests
        working-directory: extension
        run: npm run test:int || echo "no integration tests yet"
      - name: Package VSIX
        if: matrix.os == 'ubuntu-latest'
        working-directory: extension
        run: npm run package
      - name: Upload VSIX artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: cukerust-vsix
          path: extension/*.vsix

  rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Rust format check
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --workspace --all-features -- -D warnings
      - name: Rust tests
        run: cargo test --workspace --all-features --locked || cargo test --workspace
